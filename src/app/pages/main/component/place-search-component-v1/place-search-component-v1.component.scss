/* ====== Component tokens (scoped) ====== */
:host {
  --surface: rgba(255, 255, 255, 0.9);
  --surface-strong: rgba(255, 255, 255, 0.98);
  --text: #0f172a;
  --muted: #64748b;
  --border: rgba(15, 23, 42, 0.12);
  --ring: rgba(59, 130, 246, 0.35);
  --accent: #2563eb;
  --radius: 12px;
  --radius-lg: 16px;

  /* optional aliases used by inputs below */
  --primary: var(--accent);
  --card: var(--surface);
}

/* ====== Input ====== */
.form-input {
  appearance: none;
  width: 100%;
  box-sizing: border-box;

  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: 12px 16px;

  color: black;
  font-size: 14px;
  font-weight: 500;

  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.9),
    rgba(248, 250, 252, 0.95)
  );
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);

  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  transition: box-shadow 0.2s ease, border-color 0.2s ease, background 0.2s ease;
}

.form-input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 4px var(--ring), 0 6px 18px rgba(99, 102, 241, 0.18);
  background: var(--card);
  color: white;
}

.form-input::placeholder {
  color: var(--muted);
  font-weight: 400;
}

/* ====== Autocomplete wrapper ====== */
.ac-wrapper {
  position: relative; /* ensures z-index takes effect */
  z-index: 99999; /* higher than cards/inputs around it */
  isolation: isolate; /* new stacking context for safety */
  overflow: visible !important;
}

/* ====== Inline spinner ====== */
.spinner {
  position: absolute;
  right: 12px;
  top: 50%;
  width: 16px;
  height: 16px;
  transform: translateY(-50%);
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: var(--accent);
  border-right-color: var(--accent);
  animation: spin 0.6s linear infinite;
  pointer-events: none;
}
@keyframes spin {
  to {
    transform: translateY(-50%) rotate(360deg);
  }
}

/* ====== Panel ====== */
.ac-panel {
  position: absolute;
  inset-inline: 0;
  margin-top: 8px;

  /* strong, readable surface */
  background: var(--surface-strong);
  border: 1px solid var(--border);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  box-shadow: 0 18px 40px rgba(2, 6, 23, 0.25);

  border-radius: var(--radius-lg);
  z-index: 2;

  max-height: clamp(220px, 35vh, 360px);
  overflow-y: auto;

  opacity: 0;
  transform: translateY(6px) scale(0.99);
  animation: ac-in 0.14s ease-out forwards;
}
@keyframes ac-in {
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* ====== Items ====== */
.ac-item {
  display: grid;
  gap: 2px;
  padding: 12px 14px;
  cursor: pointer;
  transition: background 0.12s ease, transform 0.04s ease;
  border-bottom: 1px solid rgba(15, 23, 42, 0.06);
  background: transparent;
}
.ac-item:last-child {
  border-bottom: 0;
}

.ac-title {
  font-size: 14px;
  font-weight: 600;
  color: var(--text);
  line-height: 1.2;
  letter-spacing: 0.2px;
}
.ac-sub {
  font-size: 12px;
  color: var(--muted);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.ac-item:hover {
  background: rgba(37, 99, 235, 0.08);
}
.ac-item.active {
  background: rgba(37, 99, 235, 0.12);
  position: relative;
}
.ac-item.active::before {
  content: "";
  position: absolute;
  inset: 0 0 0 0;
  width: 3px;
  left: 0;
  background: linear-gradient(180deg, #60a5fa, #2563eb);
}

/* ====== Error ====== */
.error {
  margin-top: 6px;
  font-size: 12px;
  color: #b91c1c;
}

/* ====== Dark mode ====== */
@media (prefers-color-scheme: dark) {
  :host {
    --surface: rgba(2, 6, 23, 0.7);
    --surface-strong: rgba(2, 6, 23, 0.92);
    --text: #e5e7eb;
    --muted: #94a3b8;
    --border: rgba(148, 163, 184, 0.18);
    --ring: rgba(99, 102, 241, 0.35);
    --accent: #60a5fa;
  }
  .ac-item {
    border-bottom-color: rgba(148, 163, 184, 0.12);
  }
  .ac-item:hover {
    background: rgba(96, 165, 250, 0.12);
  }
  .ac-item.active {
    background: rgba(96, 165, 250, 0.16);
  }
}
